<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meeting.booking.dao.RoleMapper">
    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.meeting.booking.model.Role">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="description" property="description" />
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
    </resultMap>

    <!-- 基础列 -->
    <sql id="Base_Column_List">
        id, name, description, created_at, updated_at
    </sql>

    <!-- 通过ID查询角色 -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM roles
        WHERE id = #{id}
    </select>

    <!-- 通过名称查询角色 -->
    <select id="selectByName" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM roles
        WHERE name = #{name}
    </select>

    <!-- 查询用户的所有角色 -->
    <select id="selectAllRoles" resultMap="BaseResultMap">
        SELECT r.id, r.name, r.description, r.created_at, r.updated_at
        FROM roles r
        INNER JOIN user_roles ur ON r.id = ur.role_id
        WHERE ur.user_id = #{userId}
    </select>

    <!-- 插入角色 -->
    <insert id="insert" parameterType="com.meeting.booking.model.Role" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO roles (name, description, created_at, updated_at)
        VALUES (#{name}, #{description}, NOW(), NOW())
    </insert>

    <!-- 更新角色 -->
    <update id="update" parameterType="com.meeting.booking.model.Role">
        UPDATE roles
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="description != null">description = #{description},</if>
            updated_at = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <!-- 删除角色 -->       
    <delete id="deleteById" parameterType="Long">
        DELETE FROM roles WHERE id = #{id}
    </delete>       

</mapper> 